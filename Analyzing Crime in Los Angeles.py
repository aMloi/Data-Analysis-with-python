# -*- coding: utf-8 -*-
"""Analyzing Crime in Los Angeles

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tI0PCyK2gU3II4NV5_UQmOXezvw0YeWZ

Explore the crimes.csv dataset and use your findings to answer the following questions:

Which hour has the highest frequency of crimes? Store as an integer variable called peak_crime_hour.
Which area has the largest frequency of night crimes (crimes committed between 10pm and 3:59am)? Save as a string variable called peak_night_crime_location.
Identify the number of crimes committed against victims of different age groups. Save as a pandas Series called victim_ages, with age group labels "0-17", "18-25", "26-34", "35-44", "45-54", "55-64", and "65+" as the index and the frequency of crimes as the values.

## The Data

They have provided you with a single dataset to use. A summary and preview are provided below.

It is a modified version of the original data, which is publicly available from Los Angeles Open Data.

# crimes.csv

| Column     | Description              |
|------------|--------------------------|
| `'DR_NO'` | Division of Records Number: Official file number made up of a 2-digit year, area ID, and 5 digits. |
| `'Date Rptd'` | Date reported - MM/DD/YYYY. |
| `'DATE OCC'` | Date of occurrence - MM/DD/YYYY. |
| `'TIME OCC'` | In 24-hour military time. |
| `'AREA NAME'` | The 21 Geographic Areas or Patrol Divisions are also given a name designation that references a landmark or the surrounding community that it is responsible for. For example, the 77th Street Division is located at the intersection of South Broadway and 77th Street, serving neighborhoods in South Los Angeles. |
| `'Crm Cd Desc'` | Indicates the crime committed. |
| `'Vict Age'` | Victim's age in years. |
| `'Vict Sex'` | Victim's sex: `F`: Female, `M`: Male, `X`: Unknown. |
| `'Vict Descent'` | Victim's descent:<ul><li>`A` - Other Asian</li><li>`B` - Black</li><li>`C` - Chinese</li><li>`D` - Cambodian</li><li>`F` - Filipino</li><li>`G` - Guamanian</li><li>`H` - Hispanic/Latin/Mexican</li><li>`I` - American Indian/Alaskan Native</li><li>`J` - Japanese</li><li>`K` - Korean</li><li>`L` - Laotian</li><li>`O` - Other</li><li>`P` - Pacific Islander</li><li>`S` - Samoan</li><li>`U` - Hawaiian</li><li>`V` - Vietnamese</li><li>`W` - White</li><li>`X` - Unknown</li><li>`Z` - Asian Indian</li> |
| `'Weapon Desc'` | Description of the weapon used (if applicable). |
| `'Status Desc'` | Crime status. |
| `'LOCATION'` | Street address of the crime. |
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
crimes = pd.read_csv("/crimes.csv", parse_dates=["Date Rptd", "DATE OCC"], dtype={"TIME OCC": str})
crimes.head()

crimes.info()

crimes['TIME OCC']=crimes['TIME OCC'].astype(int)

crimes['TIME OCC'].value_counts()

peak_crime_hour = crimes['TIME OCC'].value_counts().idxmax()
peak_crime_hour

night_range = (crimes['TIME OCC'] >= 2200) | (crimes['TIME OCC'] <= 359)
day_range = (crimes['TIME OCC'] >= 600) & (crimes['TIME OCC'] <= 2159)

day_part = ['night','day']
conditions = [night_range, day_range]

crimes['day_part']=np.select(conditions,day_part,default='other')
crimes[crimes['day_part'] == 'night'].groupby('AREA NAME')['day_part']\
.value_counts(ascending=True)
peak_night_crime_location = 'Central'

age = [
    (crimes['Vict Age'] >= 0) & (crimes['Vict Age'] <= 17),   # Age between 0 and 17
    (crimes['Vict Age'] >= 18) & (crimes['Vict Age'] <= 25),  # Age between 18 and 25
    (crimes['Vict Age'] >= 26) & (crimes['Vict Age'] <= 34),  # Age between 26 and 34
    (crimes['Vict Age'] >= 35) & (crimes['Vict Age'] <= 44),  # Age between 35 and 44
    (crimes['Vict Age'] >= 45) & (crimes['Vict Age'] <= 54),  # Age between 45 and 54
    (crimes['Vict Age'] >= 55) & (crimes['Vict Age'] <= 64),  # Age between 55 and 64
    (crimes['Vict Age'] >= 65)                       # Age 65 and above
]

age_part = ['0-17', '18-25', '26-34', '35-44', '45-54', '55-64', '65+']

crimes['age_group']=np.select(age,age_part,default='unknown')

victim_ages = crimes['age_group'].value_counts()
victim_ages

